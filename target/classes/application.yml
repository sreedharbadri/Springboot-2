# EMBEDDED SERVER CONFIGURATION
server:
    port: ${port:8086}
    context-path: /
    error.whitelabel.enabled: false
    compression:
      enabled: true
      min-response-size: 1024
      mime-types:
          - text/html
          - text/css
          - text/plain
          - text/xml
          - application/json
          - application/javascript
# JACKSON
spring:
    jackson.serialization:
        write_dates_as_timestamps: false
    data:
      mongodb.host: localhost
      mongodb.port: 27017
      mongodb.uri: mongodb://localhost/pctl




# EUREKA
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true




---

spring:
  profiles: docker
  data:
    mongodb.host: localhost
    mongodb.port: 27017
    mongodb.uri: mongodb://localhost/pctl



# EUREKA
eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery-service:8081/eureka/


---

spring:
  profiles: standalone
  data:
    mongodb.host: localhost
    mongodb.port: 27017
    mongodb.uri: mongodb://localhost/pctl


# EUREKA
eureka:
  instance:
    hostname: localhost
    port: 8081
  client:
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/
images:
    logo: http://ui-service-dev.pcfomactl.dev.intranet/assets/img/logo-black-text.png
---

spring:
  profiles: cloud
  data:
    mongodb.host: ${vcap.services.mongodb.credentials.host}
    mongodb.port: ${vcap.services.mongodb.credentials.port}
    mongodb.uri: ${vcap.services.mongodb.credentials.uri}


eureka:
  instance:
    nonSecurePort: 80
    hostname: ${vcap.application.uris[0]}
  client:
    service-url:
      defaultZone: ${vcap.services.eureka.credentials.url}

images:
    logo: ${vcap.services.config.credentials.zuul.ui.url}/assets/img/logo-black-text.png

